================= Vars begin
{
	"MyAppSpace":"Miap",
	"MyAppClass":"MyModel",
	"Translates":
	{
		"Generated" :
		{
			"int" : "RAND(100)*100",
			"bigint" : "RAND(100)*10000",
			"nvarchar" : "CONCAT('@{Name}@_', CAST(RAND(100)*100 AS INT))",
			"nchar" : " CAST(RAND(100)*100 AS INT)",
			"decimal" : "RAND(100)*100",
			"numeric" : "RAND(100)*10",
			"datetime" : "DATEADD(MONTH, CAST(RAND(11)*100 AS INT), DATEADD(DAY, CAST(RAND(29)*100 AS INT), GETDATE()))",
			"date" : "GETDATE()",
			"bit" : "0"
		}
	},	
	"Tables" : 
	[
		{
			"Name" : "Product",
			"PK" : [ "ProductID", "CustomerID" ],
			"Columns":
			[
				{ "Name":"Id", "Type":"int"},
				{ "Name":"ProductID", "Type":"int"},
				{ "Name":"Username", "Type":"nvarchar", "Precision":"50"},
				{ "Name":"Date", "Type":"datetime", "Nullable" : true},
				{ "Name":"Product", "Type":"nvarchar", "Precision":"100", "Nullable" : true},
				{ "Name":"ProductType", "Type":"nvarchar", "Precision":"100", "Nullable" : true},
				{ "Name":"NumOfProducts", "Type":"int", "Nullable" : true},
				{ "Name":"Currency", "Type":"nvarchar", "Precision":"20", "Nullable" : true},
				{ "Name":"Platform", "Type":"nvarchar", "Precision":"100", "Nullable" : true},
				{ "Name":"ProductGroup", "Type":"nvarchar", "Precision":"50", "Nullable" : true},
				{ "Name":"CustomerID", "Type":"int", "Nullable" : true}
			]
		},
		{
			"Name" : "Activity",
			"PK" : [ "ProductID", "CustomerID" ],
			"Columns":
			[
				{ "Name":"ID", "Type":"int"},
				{ "Name":"Username", "Type":"nvarchar", "Precision":"50", "Nullable" : true},
				{ "Name":"CustomerID", "Type":"int", "Nullable" : true},
				{ "Name":"Shares", "Type":"int", "Nullable" : true},
				{ "Name":"Likes", "Type":"int", "Nullable" : true},
				{ "Name":"OFF", "Type":"int", "Nullable" : true},
				{ "Name":"TVA", "Type":"decimal", "Precision":"38, 4"},
				{ "Name":"Cost", "Type":"decimal", "Precision":"38, 4"},
				{ "Name":"Fee", "Type":"decimal", "Precision":"38, 4"},
				{ "Name":"Date", "Type":"datetime", "Nullable" : true},
				{ "Name":"Group", "Type":"nvarchar", "Precision":"100", "Nullable" : true},
				{ "Name":"Currency", "Type":"nchar", "Precision":"10", "Nullable" : true},
				{ "Name":"ProductID", "Type":"int", "Nullable" : true}
			]
		}
	]
}
================= Vars end

--------------------------------- DELETE TABLES AND TYPES ---------------------------------
-- For SqlServer >= 2016 DROP TABLE IF EXISTS ...;

================= Fragment    Tables begin

IF TYPE_ID(N'my_schema.@{Name}@0') IS NOT NULL
DROP TYPE [my_schema].[@{Name}@0];
IF OBJECT_ID('my_schema.@{Name}@0', 'U') IS NOT NULL 
DROP TABLE [my_schema].[@{Name}@0];
================= Fragment    Tables end

--------------------------------- CREATE TABLES ---------------------------------

================= Fragment    Tables begin

--------------------------------- CREATE @{Name}@ TABLE ---------------------------------

CREATE TABLE [my_schema].[@{Name}@0]
(

	================= Fragment Columns begin
	@^,^@ [@{Name}@] [@{Type}@]@~Precision~@~(@{Precision}@)~@ NULL
	================= Fragment Columns end
) ON [PRIMARY];

================= Fragment Tables end


--------------------------------- CREATE TYPES ---------------------------------

================= Fragment    Tables begin

--------------------------------- CREATE @{Name}@ TYPE ---------------------------------

CREATE TYPE [my_schema].[@{Name}@0] AS TABLE
(
	================= Fragment Columns begin
	@^,^@ [@{Name}@] [@{Type}@]@~Precision~@~(@{Precision}@)~@
	================= Fragment Columns end
);

================= Fragment Tables end


--------------------------------- FILL TABLES ---------------------------------

================= Fragment    Tables begin

--------------------------------- FILL TABLE @{Name}@ ---------------------------------
	
INSERT INTO [my_schema].[@{Name}@0]
     (
           ================= Fragment Columns begin
           @^,^@ [@{Name}@]
           ================= Fragment Columns end
     )
     VALUES
     (
           ================= Fragment Columns begin
           @^,^@ CONVERT([@{Type}@]@~Precision~@~(@{Precision}@)~@, @``Generated``@``Type``@@~Style~@~, @{Style}@~@)
           ================= Fragment Columns end
     );

================= Fragment Tables end

--------------------------------- SHOW TABLES CONTENT ---------------------------------

================= Fragment    Tables begin

SELECT TOP 1 * FROM [my_schema].[@{Name}@0];

================= Fragment Tables end

--------------------------------- CREATE UPSERT RESULTS TYPE ---------------------------------


CREATE TYPE [my_schema].[MY_UPSERT_RESULTS_TYPE] AS TABLE
(
    [Inserts] [int],
    [InsertErrors] [int],
    [Updates] [int],
    [UpdateErrors] [int]
);


================= Fragment Tables begin

--------------------------------- UPSERT @{Name}@ ---------------------------------

--[@{Name}@] [@{Type}@]@~Precision~@~(@{Precision}@)~@

IF EXISTS (SELECT * FROM sys.objects o WHERE type = 'P' AND name = N'uSP_INS_UPD_@{Name}@' AND SCHEMA_NAME(o.schema_id) = 'integ_bh') 
	BEGIN
	DROP PROCEDURE [integ_bh].uSP_INS_UPD_@{Name}@
	END
GO

CREATE PROCEDURE [integ_bh].[uSP_INS_UPD_@{Name}@]
	@startingDatetime			datetime = NULL,
	@endingDatetime				datetime = NULL
AS
	DECLARE	
		
		================= Fragment Columns begin
		@@{Name}@ @{Type}@@~(typeof( Precision ) !== 'undefined')~@~(@{Precision}@)~@,
		================= Fragment Columns end
		-- Using
		@@{Name}@_TMP integ_bh.@{Name}@,
		@defaultStartingDatetime datetime,
		@defaultEndingDatetime datetime,
		-- Returning
		@RecordsFound int = 0,
		@Inserts int = 0,
		@Updates int = 0

	-- prepare default time interval limits
	SET @defaultStartingDatetime = dateadd(hour, datediff(hour, 0, GETDATE())-2, 0)
	SET @defaultEndingDatetime	 = dateadd(hour, datediff(hour, 0, GETDATE())-1, 0)

	IF @startingDatetime IS NULL			SET @startingDatetime = @defaultStartingDatetime;
	IF @endingDatetime IS NULL			SET @endingDatetime = @defaultEndingDatetime;
	IF @endingDatetime > @defaultEndingDatetime	SET @endingDatetime = @defaultEndingDatetime;

	DECLARE	@error int;
		
	INSERT INTO @@{Name}@_TMP
	EXEC	@error = [integ_bh].[Get_@{Name}@]
			@startingDatetime,
			@endingDatetime

	DECLARE db_cursor CURSOR local
	FOR SELECT * FROM  @@{Name}@_TMP
	
	OPEN db_cursor

	FETCH NEXT FROM db_cursor into 
		================= Fragment Columns begin
		@~!(typeof( Skeep ) !== 'undefined' && Skeep == 1)~@~@^,^@  @@{Name}@~@ 
		================= Fragment Columns end

	WHILE @@FETCH_STATUS = 0   
	BEGIN
		SET @RecordsFound += 1;
		IF EXISTS 
		(
			SELECT 
				1 
			FROM 
				exalogic_integration.dbo.[@{Name}@] 
			WHERE 
				================= Fragment Columns begin
				@~(typeof( IsKey ) !== 'undefined' && IsKey == true)~@~@^AND^@ [@{Name}@] = @@{Name}@~@ 
				================= Fragment Columns end
		)
		BEGIN
			UPDATE 
				exalogic_integration.dbo.[@{Name}@] 
			SET 
				================= Fragment Columns begin
				@~!(typeof( Skeep ) !== 'undefined' && Skeep == 1) && !(typeof( IsKey ) !== 'undefined' && IsKey == true)~@~@^,^@  [@{Name}@] = @@{Name}@~@ 
				================= Fragment Columns end 
			WHERE 
				================= Fragment Columns begin
				@~(typeof( IsKey ) !== 'undefined' && IsKey == true)~@~@^AND^@ [@{Name}@] = @@{Name}@~@
				================= Fragment Columns end
			;
			SET @Updates += 1;
		END 
		ELSE BEGIN
			INSERT INTO 
				exalogic_integration.dbo.[@{Name}@] 
			(
				================= Fragment Columns begin
				@~!(typeof( Skeep ) !== 'undefined' && Skeep == 1)~@~@^,^@  [@{Name}@]~@ 
				================= Fragment Columns end 
			)
			VALUES 
			(
				================= Fragment Columns begin
				@~!(typeof( Skeep ) !== 'undefined' && Skeep == 1)~@~@^,^@  @@{Name}@~@ 
				================= Fragment Columns end 
			);
			SET @Inserts += 1;
		END
		FETCH NEXT FROM db_cursor into
			================= Fragment Columns begin
			@~!(typeof( Skeep ) !== 'undefined' && Skeep == 1)~@~@^,^@  @@{Name}@~@ 
			================= Fragment Columns end
	END
			
	CLOSE db_cursor   
	DEALLOCATE db_cursor
	-- SET FMTONLY OFF
	SELECT 'RecordsFound' = @RecordsFound, 'Inserts' = @Inserts, 'Updates' = @Updates

GO

================= Fragment Tables end

